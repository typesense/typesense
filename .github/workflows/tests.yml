name: tests

on: [push, pull_request]

# Cancel previous running if a new push is made
# Source: https://stackoverflow.com/a/72408109/123545
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update

          sudo apt-get install -y g++-10 make git zlib1g-dev m4

          # Define the compiler
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 30
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 30

          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
          sudo update-alternatives --set cc /usr/bin/gcc

          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
          sudo update-alternatives --set c++ /usr/bin/g++

      - name: Setup lld
        run: |
          sudo apt-get install -y lld

      - name: Set up Bazel
        uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
          external-cache: true

      - name: Build protobuf deps
        run: |
          bazel build @com_google_protobuf//:protobuf_headers
          bazel build @com_google_protobuf//:protobuf_lite
          bazel build @com_google_protobuf//:protobuf
          bazel build @com_google_protobuf//:protoc

      - name: Build Typesense
        run: bazel build //:typesense-server

      - name: Setup artifacts for tests
        run: curl https://dl.typesense.org/tyrec/tyrec-1-models.tar.gz > ./test/resources/models.tar.gz

      - name: Run tests
        run: bazel test --cache_test_results=no --test_output=all //:typesense-test --test_timeout=900

      # Source: https://github.com/actions/upload-artifact/issues/92#issuecomment-1080347032
      - name: Set BAZEL_BIN_FULL_PATH
        run: echo "BAZEL_BIN_FULL_PATH=$(readlink -f bazel-bin)" >> $GITHUB_ENV
        
      - name: Set BAZEL_TESTLOGS_FULL_PATH
        run: echo "BAZEL_TESTLOGS_FULL_PATH=$(readlink -f bazel-testlogs)" >> $GITHUB_ENV
        if: failure()
        
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: typesense-server
          path: ${{ env.BAZEL_BIN_FULL_PATH }}/typesense-server
        
      - name: Save test logs on failure
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: ${{ env.BAZEL_TESTLOGS_FULL_PATH }}/
        if: failure()
  
  api-tests:
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Typesense Binary
        uses: actions/download-artifact@v4
        with:
          name: typesense-server
          path: ./typesense-server-binary
      - name: Make binary executable
        run: chmod +x ./typesense-server-binary/typesense-server
      - name: Install bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        working-directory: api_tests
        run: bun install 
      - name: Run API tests
        working-directory: api_tests
        env:
          TYPESENSE_BINARY_PATH: ${{ github.workspace }}/typesense-server-binary/typesense-server
          TYPESENSE_DATA_DIR: ${{ github.workspace }}/tmp/test
          OPEN_AI_API_KEY: ""
        run: bun run src/index.ts